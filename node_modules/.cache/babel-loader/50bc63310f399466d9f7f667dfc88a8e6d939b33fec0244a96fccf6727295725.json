{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END\\\\my-react\\\\src\\\\pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\n// import { MyButton } from \"../components/UI/button/MyButton\";\n// import { PostForm } from \"../components/PostForm\";\n// import { PostFilter } from \"../components/PostFilter\";\n// import { MyModal } from \"../components/UI/MyModal/MyModal\";\n// import { usePosts } from \"../hooks/usePosts\";\n// import { useEffect } from \"react\";\n// import PostService from \"../API/PostService\";\n// import { useFetching } from \"../hooks/useFetching\";\n// import { getPageCount } from \"../utils/pages\";\n// import { Pagination } from \"../components/UI/pagination/Pagination\";\n// import '../styles/App.scss'\n// import { useObserver } from \"../hooks/useObserver\";\n// import { PostItems } from \"../components/PostItems\";\n// import { NumberOfPosts } from '../components/NumberOfPosts'\n// import { SetEndlessPosts } from '../components/UI/SetEndlessPosts/SetEndlessPosts'\n\nimport { MyButton } from \"./MyButton\";\nimport { PostForm } from \"../components/PostForm\";\nimport { PostFilter } from \"../components/PostFilter\";\nimport { MyModal } from \"../components/UI/MyModal/MyModal\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport { useEffect } from \"react\";\nimport PostService from \"../API/PostService\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { getPageCount } from \"../utils/pages\";\nimport { Pagination } from \"../components/UI/pagination/Pagination\";\nimport '../styles/App.scss';\nimport { useObserver } from \"../hooks/useObserver\";\nimport { PostItems } from \"../components/PostItems\";\nimport { NumberOfPosts } from '../components/NumberOfPosts';\nimport { SetEndlessPosts } from '../components/UI/SetEndlessPosts/SetEndlessPosts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Posts = () => {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const [observe, setObserve] = useState(true);\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    if (observe) {\n      setPosts([...posts, ...response.data]);\n    } else {\n      setPosts(response.data);\n    }\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  useObserver(lastElement.current, () => setPage(page + 1), page < totalPages, isPostsLoading, posts.length, observe);\n  useEffect(() => {\n    fetchPosts();\n  }, [page, limit]);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u041F\\u043E\\u0441\\u0442\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        posts: posts,\n        setPosts: setPosts,\n        setModal: setModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SetEndlessPosts, {\n      setObserve: setObserve\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(NumberOfPosts, {\n      limit: limit,\n      setLimit: setLimit,\n      observe: observe,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostItems, {\n      isPostsLoading: isPostsLoading,\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: 'Список постов',\n      error: postError\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      page: page,\n      setPage: setPage,\n      observe: observe\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 9\n  }, this);\n};\n_s(Posts, \"bohv0VXJtByGN96ZaQal13iW5M0=\", false, function () {\n  return [useFetching, useObserver, usePosts];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useRef","useState","MyButton","PostForm","PostFilter","MyModal","usePosts","useEffect","PostService","useFetching","getPageCount","Pagination","useObserver","PostItems","NumberOfPosts","SetEndlessPosts","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","observe","setObserve","lastElement","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","removePost","post","p","id","current","length","sortedAndSearchedPosts","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","remove","title","error","ref","_c","$RefreshReg$"],"sources":["D:/FRONT-END/my-react/src/pages/Posts.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\n// import { MyButton } from \"../components/UI/button/MyButton\";\r\n// import { PostForm } from \"../components/PostForm\";\r\n// import { PostFilter } from \"../components/PostFilter\";\r\n// import { MyModal } from \"../components/UI/MyModal/MyModal\";\r\n// import { usePosts } from \"../hooks/usePosts\";\r\n// import { useEffect } from \"react\";\r\n// import PostService from \"../API/PostService\";\r\n// import { useFetching } from \"../hooks/useFetching\";\r\n// import { getPageCount } from \"../utils/pages\";\r\n// import { Pagination } from \"../components/UI/pagination/Pagination\";\r\n// import '../styles/App.scss'\r\n// import { useObserver } from \"../hooks/useObserver\";\r\n// import { PostItems } from \"../components/PostItems\";\r\n// import { NumberOfPosts } from '../components/NumberOfPosts'\r\n// import { SetEndlessPosts } from '../components/UI/SetEndlessPosts/SetEndlessPosts'\r\n\r\n\r\nimport { MyButton } from \"./MyButton\";\r\nimport { PostForm } from \"../components/PostForm\";\r\nimport { PostFilter } from \"../components/PostFilter\";\r\nimport { MyModal } from \"../components/UI/MyModal/MyModal\";\r\nimport { usePosts } from \"../hooks/usePosts\";\r\nimport { useEffect } from \"react\";\r\nimport PostService from \"../API/PostService\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { getPageCount } from \"../utils/pages\";\r\nimport { Pagination } from \"../components/UI/pagination/Pagination\";\r\nimport '../styles/App.scss'\r\nimport { useObserver } from \"../hooks/useObserver\";\r\nimport { PostItems } from \"../components/PostItems\";\r\nimport { NumberOfPosts } from '../components/NumberOfPosts'\r\nimport { SetEndlessPosts } from '../components/UI/SetEndlessPosts/SetEndlessPosts'\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\nexport const Posts = () => {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filter, setFilter] = useState({ sort: '', query: '' })\r\n    const [modal, setModal] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [page, setPage] = useState(1);\r\n    const [observe, setObserve] = useState(true);\r\n    const lastElement = useRef();\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\r\n        const response = await PostService.getAll(limit, page);\r\n        if (observe) {\r\n            setPosts([...posts, ...response.data]);\r\n        } else {\r\n            setPosts(response.data);\r\n        }\r\n        const totalCount = response.headers['x-total-count'];\r\n        setTotalPages(getPageCount(totalCount, limit))\r\n    });\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id))\r\n    }\r\n\r\n    useObserver(\r\n        lastElement.current,\r\n        () => setPage(page + 1),\r\n        page < totalPages,\r\n        isPostsLoading,\r\n        posts.length,\r\n        observe\r\n    );\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [page, limit])\r\n\r\n\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton onClick={() => setModal(true)}>\r\n                Создать Пост\r\n            </MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm posts={posts} setPosts={setPosts} setModal={setModal} />\r\n            </MyModal>\r\n            <PostFilter\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n            />\r\n            <SetEndlessPosts setObserve={setObserve} />\r\n            <NumberOfPosts limit={limit} setLimit={setLimit} observe={observe} setPage={setPage} />\r\n            <PostItems\r\n                isPostsLoading={isPostsLoading}\r\n                remove={removePost}\r\n                posts={sortedAndSearchedPosts}\r\n                title={'Список постов'}\r\n                error={postError}\r\n            />\r\n            <div ref={lastElement} />\r\n            <Pagination totalPages={totalPages} page={page} setPage={setPage} observe={observe} />\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}