{"ast":null,"code":"var _jsxFileName = \"D:\\\\FRONT-END\\\\my-react\\\\src\\\\pages\\\\Posts.jsx\",\n  _s = $RefreshSig$();\nimport React, { useRef, useState } from \"react\";\nimport Postitem from \"../components/Postitem\";\nimport { MyButton } from \"../components/UI/button/MyButton\";\nimport { PostForm } from \"../components/PostForm\";\nimport { PostFilter } from \"../components/PostFilter\";\nimport { MyModal } from \"../components/UI/MyModal/MyModal\";\nimport { usePosts } from \"../hooks/usePosts\";\nimport { useEffect } from \"react\";\nimport PostService from \"../API/PostService\";\nimport { useFetching } from \"../hooks/useFetching\";\nimport { getPageCount } from \"../utils/pages\";\nimport { Pagination } from \"../components/UI/pagination/Pagination\";\nimport '../styles/App.css';\nimport { useObserver } from \"../hooks/useObserver\";\nimport { MySelect } from \"../components/UI/select/MySelect\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function Posts() {\n  _s();\n  const [posts, setPosts] = useState([]);\n  const [filter, setFilter] = useState({\n    sort: '',\n    query: ''\n  });\n  const [modal, setModal] = useState(false);\n  const [totalPages, setTotalPages] = useState(0);\n  const [limit, setLimit] = useState(10);\n  const [page, setPage] = useState(1);\n  const lastElement = useRef();\n  const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\n    const response = await PostService.getAll(limit, page);\n    setPosts([...posts, ...response.data]);\n    const totalCount = response.headers['x-total-count'];\n    setTotalPages(getPageCount(totalCount, limit));\n  });\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n  useObserver(lastElement.current, () => setPage(page + 1), page < totalPages, isPostsLoading, posts.length);\n  useEffect(() => {\n    fetchPosts();\n  }, [page, limit]);\n  const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(MyButton, {\n      onClick: () => setModal(true),\n      children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u041F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MyModal, {\n      visible: modal,\n      setVisible: setModal,\n      children: /*#__PURE__*/_jsxDEV(PostForm, {\n        posts: posts,\n        setPosts: setPosts,\n        setModal: setModal\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        height: '1px',\n        backgroundColor: 'black',\n        margin: '25px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {\n      filter: filter,\n      setFilter: setFilter\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(MySelect, {\n      options: [{\n        value: 5,\n        name: 5\n      }, {\n        value: 10,\n        name: 10\n      }, {\n        value: 15,\n        name: 15\n      }, {\n        value: 20,\n        name: 20\n      }, {\n        value: 25,\n        name: 25\n      }, {\n        value: -1,\n        name: 'все'\n      }],\n      defaultValue: \"\\u043A\\u043E\\u043B\\u0438\\u0447\\u0435\\u0441\\u0442\\u0432\\u043E \\u043F\\u043E\\u0441\\u0442\\u043E\\u0432\",\n      value: limit,\n      onChange: value => setLimit(value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 13\n    }, this), postError && /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: [\"\\u041F\\u0440\\u043E\\u0438\\u0437\\u043E\\u0448\\u043B\\u0430 \\u041E\\u0448\\u0438\\u0431\\u043A\\u0430 $\", postError]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(Postitem, {\n      isPostsLoading: isPostsLoading,\n      remove: removePost,\n      posts: sortedAndSearchedPosts,\n      title: 'Список постов'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: lastElement\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      totalPages: totalPages,\n      page: page,\n      setPage: setPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(Posts, \"virzMLVRvPEMYAoYO3XBxdjf5pA=\", false, function () {\n  return [useFetching, useObserver, usePosts];\n});\n_c = Posts;\nvar _c;\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"names":["React","useRef","useState","Postitem","MyButton","PostForm","PostFilter","MyModal","usePosts","useEffect","PostService","useFetching","getPageCount","Pagination","useObserver","MySelect","jsxDEV","_jsxDEV","Posts","_s","posts","setPosts","filter","setFilter","sort","query","modal","setModal","totalPages","setTotalPages","limit","setLimit","page","setPage","lastElement","fetchPosts","isPostsLoading","postError","response","getAll","data","totalCount","headers","removePost","post","p","id","current","length","sortedAndSearchedPosts","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","visible","setVisible","style","height","backgroundColor","margin","options","value","name","defaultValue","onChange","remove","title","ref","_c","$RefreshReg$"],"sources":["D:/FRONT-END/my-react/src/pages/Posts.jsx"],"sourcesContent":["import React, { useRef, useState } from \"react\";\r\nimport Postitem from \"../components/Postitem\";\r\nimport { MyButton } from \"../components/UI/button/MyButton\";\r\nimport { PostForm } from \"../components/PostForm\";\r\nimport { PostFilter } from \"../components/PostFilter\";\r\nimport { MyModal } from \"../components/UI/MyModal/MyModal\";\r\nimport { usePosts } from \"../hooks/usePosts\";\r\nimport { useEffect } from \"react\";\r\nimport PostService from \"../API/PostService\";\r\nimport { useFetching } from \"../hooks/useFetching\";\r\nimport { getPageCount } from \"../utils/pages\";\r\nimport { Pagination } from \"../components/UI/pagination/Pagination\";\r\nimport '../styles/App.css'\r\nimport { useObserver } from \"../hooks/useObserver\";\r\nimport { MySelect } from \"../components/UI/select/MySelect\";\r\n\r\nexport function Posts() {\r\n    const [posts, setPosts] = useState([]);\r\n    const [filter, setFilter] = useState({ sort: '', query: '' })\r\n    const [modal, setModal] = useState(false);\r\n    const [totalPages, setTotalPages] = useState(0);\r\n    const [limit, setLimit] = useState(10);\r\n    const [page, setPage] = useState(1);\r\n    const lastElement = useRef();\r\n    const [fetchPosts, isPostsLoading, postError] = useFetching(async () => {\r\n        const response = await PostService.getAll(limit, page);\r\n        setPosts([...posts, ...response.data]);\r\n        const totalCount = response.headers['x-total-count'];\r\n        setTotalPages(getPageCount(totalCount, limit))\r\n    });\r\n\r\n    const removePost = (post) => {\r\n        setPosts(posts.filter(p => p.id !== post.id))\r\n    }\r\n\r\n    useObserver(\r\n        lastElement.current,\r\n        () => setPage(page + 1),\r\n        page < totalPages,\r\n        isPostsLoading,\r\n        posts.length\r\n    );\r\n\r\n\r\n    useEffect(() => {\r\n        fetchPosts();\r\n    }, [page, limit])\r\n\r\n    const sortedAndSearchedPosts = usePosts(posts, filter.sort, filter.query)\r\n\r\n    return (\r\n        <div className=\"App\">\r\n            <MyButton onClick={() => setModal(true)}>\r\n                Создать Пользователя\r\n            </MyButton>\r\n            <MyModal visible={modal} setVisible={setModal}>\r\n                <PostForm posts={posts} setPosts={setPosts} setModal={setModal} />\r\n            </MyModal>\r\n            <hr style={{\r\n                height: '1px',\r\n                backgroundColor: 'black',\r\n                margin: '25px 0',\r\n            }} />\r\n            <PostFilter\r\n                filter={filter}\r\n                setFilter={setFilter}\r\n            />\r\n            <MySelect\r\n                options={\r\n                    [\r\n                        { value: 5, name: 5 },\r\n                        { value: 10, name: 10 },\r\n                        { value: 15, name: 15 },\r\n                        { value: 20, name: 20 },\r\n                        { value: 25, name: 25 },\r\n                        { value: -1, name: 'все' }\r\n                    ]}\r\n                defaultValue='количество постов'\r\n                value={limit}\r\n                onChange={value => setLimit(value)}\r\n\r\n            />\r\n            {postError &&\r\n                <h1>Произошла Ошибка ${postError}</h1>\r\n            }\r\n            <Postitem isPostsLoading={isPostsLoading} remove={removePost} posts={sortedAndSearchedPosts} title={'Список постов'} />\r\n            <div ref={lastElement} />\r\n            <Pagination totalPages={totalPages} page={page} setPage={setPage} />\r\n\r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AAC/C,OAAOC,QAAQ,MAAM,wBAAwB;AAC7C,SAASC,QAAQ,QAAQ,kCAAkC;AAC3D,SAASC,QAAQ,QAAQ,wBAAwB;AACjD,SAASC,UAAU,QAAQ,0BAA0B;AACrD,SAASC,OAAO,QAAQ,kCAAkC;AAC1D,SAASC,QAAQ,QAAQ,mBAAmB;AAC5C,SAASC,SAAS,QAAQ,OAAO;AACjC,OAAOC,WAAW,MAAM,oBAAoB;AAC5C,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,YAAY,QAAQ,gBAAgB;AAC7C,SAASC,UAAU,QAAQ,wCAAwC;AACnE,OAAO,mBAAmB;AAC1B,SAASC,WAAW,QAAQ,sBAAsB;AAClD,SAASC,QAAQ,QAAQ,kCAAkC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5D,OAAO,SAASC,KAAKA,CAAA,EAAG;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACoB,MAAM,EAAEC,SAAS,CAAC,GAAGrB,QAAQ,CAAC;IAAEsB,IAAI,EAAE,EAAE;IAAEC,KAAK,EAAE;EAAG,CAAC,CAAC;EAC7D,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGzB,QAAQ,CAAC,KAAK,CAAC;EACzC,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAAC4B,KAAK,EAAEC,QAAQ,CAAC,GAAG7B,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAAC8B,IAAI,EAAEC,OAAO,CAAC,GAAG/B,QAAQ,CAAC,CAAC,CAAC;EACnC,MAAMgC,WAAW,GAAGjC,MAAM,CAAC,CAAC;EAC5B,MAAM,CAACkC,UAAU,EAAEC,cAAc,EAAEC,SAAS,CAAC,GAAG1B,WAAW,CAAC,YAAY;IACpE,MAAM2B,QAAQ,GAAG,MAAM5B,WAAW,CAAC6B,MAAM,CAACT,KAAK,EAAEE,IAAI,CAAC;IACtDX,QAAQ,CAAC,CAAC,GAAGD,KAAK,EAAE,GAAGkB,QAAQ,CAACE,IAAI,CAAC,CAAC;IACtC,MAAMC,UAAU,GAAGH,QAAQ,CAACI,OAAO,CAAC,eAAe,CAAC;IACpDb,aAAa,CAACjB,YAAY,CAAC6B,UAAU,EAAEX,KAAK,CAAC,CAAC;EAClD,CAAC,CAAC;EAEF,MAAMa,UAAU,GAAIC,IAAI,IAAK;IACzBvB,QAAQ,CAACD,KAAK,CAACE,MAAM,CAACuB,CAAC,IAAIA,CAAC,CAACC,EAAE,KAAKF,IAAI,CAACE,EAAE,CAAC,CAAC;EACjD,CAAC;EAEDhC,WAAW,CACPoB,WAAW,CAACa,OAAO,EACnB,MAAMd,OAAO,CAACD,IAAI,GAAG,CAAC,CAAC,EACvBA,IAAI,GAAGJ,UAAU,EACjBQ,cAAc,EACdhB,KAAK,CAAC4B,MACV,CAAC;EAGDvC,SAAS,CAAC,MAAM;IACZ0B,UAAU,CAAC,CAAC;EAChB,CAAC,EAAE,CAACH,IAAI,EAAEF,KAAK,CAAC,CAAC;EAEjB,MAAMmB,sBAAsB,GAAGzC,QAAQ,CAACY,KAAK,EAAEE,MAAM,CAACE,IAAI,EAAEF,MAAM,CAACG,KAAK,CAAC;EAEzE,oBACIR,OAAA;IAAKiC,SAAS,EAAC,KAAK;IAAAC,QAAA,gBAChBlC,OAAA,CAACb,QAAQ;MAACgD,OAAO,EAAEA,CAAA,KAAMzB,QAAQ,CAAC,IAAI,CAAE;MAAAwB,QAAA,EAAC;IAEzC;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAU,CAAC,eACXvC,OAAA,CAACV,OAAO;MAACkD,OAAO,EAAE/B,KAAM;MAACgC,UAAU,EAAE/B,QAAS;MAAAwB,QAAA,eAC1ClC,OAAA,CAACZ,QAAQ;QAACe,KAAK,EAAEA,KAAM;QAACC,QAAQ,EAAEA,QAAS;QAACM,QAAQ,EAAEA;MAAS;QAAA0B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACVvC,OAAA;MAAI0C,KAAK,EAAE;QACPC,MAAM,EAAE,KAAK;QACbC,eAAe,EAAE,OAAO;QACxBC,MAAM,EAAE;MACZ;IAAE;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACLvC,OAAA,CAACX,UAAU;MACPgB,MAAM,EAAEA,MAAO;MACfC,SAAS,EAAEA;IAAU;MAAA8B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFvC,OAAA,CAACF,QAAQ;MACLgD,OAAO,EACH,CACI;QAAEC,KAAK,EAAE,CAAC;QAAEC,IAAI,EAAE;MAAE,CAAC,EACrB;QAAED,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,EACvB;QAAED,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,EACvB;QAAED,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,EACvB;QAAED,KAAK,EAAE,EAAE;QAAEC,IAAI,EAAE;MAAG,CAAC,EACvB;QAAED,KAAK,EAAE,CAAC,CAAC;QAAEC,IAAI,EAAE;MAAM,CAAC,CAC5B;MACNC,YAAY,EAAC,mGAAmB;MAChCF,KAAK,EAAElC,KAAM;MACbqC,QAAQ,EAAEH,KAAK,IAAIjC,QAAQ,CAACiC,KAAK;IAAE;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEtC,CAAC,EACDnB,SAAS,iBACNpB,OAAA;MAAAkC,QAAA,GAAI,+FAAkB,EAACd,SAAS;IAAA;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE1CvC,OAAA,CAACd,QAAQ;MAACiC,cAAc,EAAEA,cAAe;MAACgC,MAAM,EAAEzB,UAAW;MAACvB,KAAK,EAAE6B,sBAAuB;MAACoB,KAAK,EAAE;IAAgB;MAAAhB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACvHvC,OAAA;MAAKqD,GAAG,EAAEpC;IAAY;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACzBvC,OAAA,CAACJ,UAAU;MAACe,UAAU,EAAEA,UAAW;MAACI,IAAI,EAAEA,IAAK;MAACC,OAAO,EAAEA;IAAQ;MAAAoB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAEnE,CAAC;AAEd;AAACrC,EAAA,CA3EeD,KAAK;EAAA,QAQ+BP,WAAW,EAW3DG,WAAW,EAaoBN,QAAQ;AAAA;AAAA+D,EAAA,GAhC3BrD,KAAK;AAAA,IAAAqD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}